
<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="Originator" content="ImportDoc">
<meta name="OriginalFile" content="GetSuperCutSectionValues.doc">
 <meta name="generator" content="Adobe RoboHelp 2019">
<title>GetSuperCutTendonNames</title>
<link rel="stylesheet" href="../../../../SAP2000.CSS" type="text/css">
</head>
<body lang="EN-US" xml:lang="EN-US"><a name="642b3b9347ca42c9b00b820c00c373fa=1"></a>
<script type="text/javascript" src="../../../../ehlpdhtm.js"></script>

<h1>GetSuperCutTendonNames</h1>
<h2>Syntax</h2>
<p class="Comment">SapObject.SapModel.BridgeAdvancedSuper.BASConcBox.GetSuperCutTendonNames</p>
<h2>VB6 Procedure</h2>
<p class="Comment">Function GetSuperCutTendonNames(ByVal Name As String, ByVal CutIndex As Long, ByVal TendonIndex As Long, ByRef BridgeTendon As String, ByRef TendonObj as String) As Long</p>
<h2>Parameters</h2>
<p class="ParameterName">Name</p>
<p class="Comment">The name of an existing bridge object.</p>
<p class="ParameterName">CutIndex</p>
<p class="Comment">The index number of the section cut in this bridge object. This must be from 0 to Count-1, where Count is the value returned by the function CountSuperCut. Section cuts will be in order of increasing Station and increasing SuperCutType.</p>
<p class="ParameterName">TendonIndex</p>
<p class="Comment">The index number of a tendon in this section cut of this bridge object. This must be from 0 to CountTendon-1, where CountTendon is the number of tendons returned by function GetSuperCutSectionValues using Item = 12.</p>
<p class="ParameterName">BridgeTendon</p>
<p class="Comment">The name of the tendon inside of the bridge object corresponding to TendonIndex.</p>
<p class="ParameterName">TendonObj</p>
<p class="Comment">The name of the tendon object created by the program from the bridge object tendon corresponding to TendonIndex.</p>
<h2>Remarks</h2>
<p class="Comment">This function returns the name of a single tendon object, giving access to tendon assignments, tendon section, and material property.</p>
<p class="Comment">The function returns zero if the information is successfully retrieved; otherwise it returns a nonzero value.</p>
<p class="Comment">If the bridge object is not currently linked to existing objects in the model, an error is returned.</p>
<h2>VBA Example</h2>
<p class="Comment">This example assumes that a file MyBridge.sdb exists and has a linked bridge object named BOBJ1 in it.</p>
<p class="Coding">Sub GetBridgeSuperCutTendonNames()<br>
&#160;&#160;&#160;'dimension variables<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim SapObject as cOAPI<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim SapModel As cSapModel<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim ret As Long<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim Count As Long<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim CountTendon As Long<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim BridgeTendon As String<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim TendonObj As String<br>
<br>
&#160;&#160;&#160;'create Sap2000 object<br>
&#160;&#160;&#160;&#160;&#160;&#160;Set SapObject = CreateObject("CSI.SAP2000.API.SapObject")<br>
<br>
&#160;&#160;&#160;'start Sap2000 application<br>
&#160;&#160;&#160;&#160;&#160;&#160;SapObject.ApplicationStart<br>
<br>
&#160;&#160;&#160;'create SapModel object<br>
&#160;&#160;&#160;&#160;&#160;&#160;Set SapModel = SapObject.SapModel<br>
<br>
&#160;&#160;&#160;'initialize model<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.InitializeNewModel<br>
<br>
&#160;&#160;&#160;'open an existing file<br>
&#160;&#160;&#160;&#160;&#160;&#160;FileName = "C:\SapAPI\MyBridge.sdb"<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.File.OpenFile(FileName)<br>
<br>
&#160;&#160;&#160;'get section cut count<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.BridgeAdvancedSuper.CountSuperCut("BOBJ1", Count)<br>
<br>
&#160;&#160;&#160;'get tendon count at section cut 1<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.BridgeAdvancedSuper.BASConcBox.GetSuperCutSectionValues ("BOBJ1", 12, 1, CountTendon)<br>
<br>
&#160;&#160;&#160;'get tendon object name for first tendon (0)<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.BridgeAdvancedSuper.BASConcBox.GetSuperCutTendonNames("BOBJ1", 1, 0, BridgeTendon, TendonObj)<br>
<br>
&#160;&#160;&#160;'close Sap2000<br>
&#160;&#160;&#160;&#160;&#160;&#160;SapObject.ApplicationExit False<br>
&#160;&#160;&#160;&#160;&#160;&#160;Set SapModel = Nothing<br>
&#160;&#160;&#160;&#160;&#160;&#160;Set SapObject = Nothing<br>
End Sub</p>
<h2>Release Notes</h2>
<p class="Comment">Initial release in version 12.00.</p>
<h2>See Also</h2>
<p class="Block-Text"><a href="../CountSuperCut.htm">CountSuperCut</a></p>
<p class="Block-Text"><a href="GetSuperCutSectionValues.htm">GetSuperCutSectionValues</a></p>
<p class="Block-Text"><a href="GetSuperCutTendonValues.htm">GetSuperCutTendonValues</a></p>
</body>
</html>
