
<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
 <meta name="generator" content="Adobe RoboHelp 2019">
<title>GetLoads {Static Nonlinear Multistep}</title>
<link rel="StyleSheet" href="../../../../SAP2000.CSS" type="text/css">
</head>
<body>
<script type="text/javascript" src="../../../../ehlpdhtm.js" language="JavaScript1.2"></script>

<h1>GetLoads</h1>
<h2>Syntax</h2>
<p class="Comment">SapObject.SapModel.LoadCases.StaticNonlinearMultistep.GetLoads</p>
<h2>VB6 Procedure</h2>
<p class="Comment">Function GetLoads(ByVal Name As String, ByRef NumberLoads As Long, ByRef LoadType() As String, ByRef LoadName() As String, ByRef SF() As Double, ByRef StepRange() as Integer, ByRef FirstLoadStep() As Integer, ByRef LastLoadStep() As Integer, ByRef StartCaseStep() As Integer, ByRef ExtrapolateOption() As Integer ) As Long</p>
<h2>Parameters</h2>
<p class="ParameterName">Name</p>
<p class="Comment">The name of an existing static nonlinear multistep load case.</p>
<p class="ParameterName">NumberLoads</p>
<p class="Comment">The number of loads assigned to the specified analysis case.</p>
<p class="ParameterName">LoadType</p>
<p class="Comment">This is an array that includes either Load or Accel, indicating the type of each load assigned to the load case.</p>
<p class="ParameterName">LoadName</p>
<p class="Comment">This is an array that includes the name of each load assigned to the load case.</p>
<p class="Comment">If the LoadType item is Load, this item is the name of a defined load pattern.</p>
<p class="Comment">If the LoadType item is Accel, this item is UX, UY, UZ, RX, RY or RZ, indicating the direction of the load.</p>
<p class="ParameterName">SF</p>
<p class="Comment">This is an array that includes the scale factor of each load assigned to the load case. [L/s<sup style="font-size: 8pt;">2</sup>] for Accel UX UY and UZ; otherwise unitless</p>
<p class="ParameterName">StepRange</p>
<p class="Comment">This is an array that identifies the step range type to consider for each load assigned to the load case. The allowed values are:</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: 88px;">0 = All</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: 88px;">1 = User</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: 88px;">&#160;</p>
<p class="ParameterName">FirstLoadStep</p>
<p class="Comment">This is an array that specifies the first load step to consider for each load assigned to the load case. This value is only applicable when StepRange = User.</p>
<p class="ParameterName">LastLoadStep</p>
<p class="Comment">This is an array that specifies the last load step to consider for each load assigned to the load case. This value is only applicable when StepRange = User.</p>
<p class="ParameterName">StartCaseStep</p>
<p class="Comment">This is an array that specifies the load case step at which to start applying each load assigned to the load case.</p>
<p class="ParameterName">ExtrapolateOption</p>
<p class="Comment">This is an array that identifies the extrapolation option for each load assigned to the load case. The allowed values are:</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: 88px;">0 = None</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: 88px;">1 = Last Step</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: 88px;">2 = Repeat Range</p>
<h2>Remarks</h2>
<p class="Comment">This function retrieves the load data for the specified load case.</p>
<p class="Comment">The function returns zero if the data is successfully retrieved; otherwise it returns a nonzero value.</p>
<h2>VBA Example</h2>
<p class="Coding">Sub GetCaseStaticNonlinearMultistepLoads()<br>
&#160;&#160;&#160;'dimension variables<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim SapObject as cOAPI<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim SapModel As cSapModel<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim ret As Long<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim MyLoadType() As String<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim MyLoadName() As String<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim MySF() As Double<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim MyStepRange() As Long</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;Dim MyFirstLoadStep() As Long</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;Dim MyLastLoadStep() As Long</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;Dim MyStartCaseStep() As Long</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;Dim MyExtrapolateOption() As Long</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;Dim NumberLoads As Long<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim LoadType() As String<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim LoadName() As String<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim SF() As Double</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;Dim StepRange() As Long</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;Dim FirstLoadStep() As Long</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;Dim LastLoadStep() As Long</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;Dim StartCaseStep() As Long</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;Dim ExtrapolateOption() As Long<br>
<br>
&#160;&#160;&#160;'create Sap2000 object<br>
&#160;&#160;&#160;&#160;&#160;&#160;Set SapObject = CreateObject("CSI.SAP2000.API.SapObject")<br>
<br>
&#160;&#160;&#160;'start Sap2000 application<br>
&#160;&#160;&#160;&#160;&#160;&#160;SapObject.ApplicationStart<br>
<br>
&#160;&#160;&#160;'create SapModel object<br>
&#160;&#160;&#160;&#160;&#160;&#160;Set SapModel = SapObject.SapModel<br>
<br>
&#160;&#160;&#160;'initialize model<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.InitializeNewModel<br>
<br>
&#160;&#160;&#160;'create model from template<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.File.New2DFrame(PortalFrame, 2, 144, 2, 288)<br>
<br>
&#160;&#160;&#160;'add static nonlinear load case<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.LoadCases.StaticNonlinearMultistep.SetCase("LCASE1")<br>
&#160;&#160;&#160;'set load data<br>
&#160;&#160;&#160;&#160;&#160;&#160;ReDim MyLoadType(1)<br>
&#160;&#160;&#160;&#160;&#160;&#160;ReDim MyLoadName(1)<br>
&#160;&#160;&#160;&#160;&#160;&#160;ReDim MySF(1)</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;ReDim MyStepRange(1)</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;ReDim MyFirstLoadStep(1)</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;ReDim MyLastLoadStep(1)</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;ReDim MyStartCaseStep(1)</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;ReDim MyExtrapolateOption(1)<br>
&#160;&#160;&#160;&#160;&#160;&#160;MyLoadType(0) = "Load"<br>
&#160;&#160;&#160;&#160;&#160;&#160;MyLoadName(0) = "DEAD"<br>
&#160;&#160;&#160;&#160;&#160;&#160;MySF(0) = 0.7</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;MyStepRange(0) = 0</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;MyFirstLoadStep(0) = 1</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;MyLastLoadStep(0) = 1<br>
&#160;&#160;&#160;&#160;&#160;&#160;MyStartCaseStep(0) = 1</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;MyExtrapolateOption(0) = 1</p>
<p class="Coding">&#160;&#160;&#160;&#160;&#160;&#160;MyLoadType(1) = "Accel0"<br>
&#160;&#160;&#160;&#160;&#160;&#160;MyLoadName(1) = "UZ"<br>
&#160;&#160;&#160;&#160;&#160;&#160;MySF(1) = 1.2<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.LoadCases.StaticNonlinearMultistep.SetLoads("LCASE1", 2, MyLoadType, MyLoadName, MySF, MyStepRange, MyFirstLoadStep, MyLastLoadStep, MyStartCaseStep, MyExtrapolateOption )<br>
<br>
&#160;&#160;&#160;'get load data<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.LoadCases.StaticNonlinearMultistep.GetLoads("LCASE1", NumberLoads, LoadType, LoadName, SF, StepRange, FirstLoadStep, LastLoadStep, StartCaseStep, ExtrapolateOption )<br>
<br>
&#160;&#160;&#160;'close Sap2000<br>
&#160;&#160;&#160;&#160;&#160;&#160;SapObject.ApplicationExit False<br>
&#160;&#160;&#160;&#160;&#160;&#160;Set SapModel = Nothing<br>
&#160;&#160;&#160;&#160;&#160;&#160;Set SapObject = Nothing<br>
End Sub</p>
<h2>Release Notes</h2>
<p class="Comment">Initial release in v21.0.0.</p>
<h2>See Also</h2>
<p class="Block-Text"><a href="SetLoads_{Static_Nonlinear_Multistep}.htm">SetLoads</a></p>
</body>
</html>
