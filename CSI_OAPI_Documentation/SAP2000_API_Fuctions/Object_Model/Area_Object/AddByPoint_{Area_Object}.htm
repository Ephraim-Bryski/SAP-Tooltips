
<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="Originator" content="ImportDoc">
<meta name="OriginalFile" content="F:\Documents and Settings\Nancy\My Documents\SharedFiles\API\Area Object Functions\AddByPoint.doc">
<meta name="topic-status" content="In Progress">
<meta name="topic-priority" content="0">
<meta name="topic-time-estimate" content="0">
<meta name="topic-id" content="">
 <meta name="generator" content="Adobe RoboHelp 2019">
<title>AddByPoint {Area Object}</title>
<link rel="StyleSheet" href="../../../SAP2000.CSS" type="text/css">
</head>
<body lang="EN-US" xml:lang="EN-US"><a name="642b3b9347ca42c9b00b820c00c373fa=1"></a>
<script type="text/javascript" src="../../../ehlpdhtm.js"></script>

<h1>AddByPoint</h1>
<h2>Syntax</h2>
<p class="Comment">SapObject.SapModel.AreaObj.AddByPoint</p>
<h2>VB6 Procedure</h2>
<p class="Comment">Function AddByPoint(ByVal NumberPoints as Long, ByRef Point() as String, ByRef Name As String, Optional ByVal PropName As String = "Default", Optional ByVal UserName As String = "") As Long</p>
<h2>Parameters</h2>
<p class="ParameterName">NumberPoints</p>
<p class="Comment">The number of points in the area abject.</p>
<p class="ParameterName">Point</p>
<p class="Comment">This is an array containing the names of the point objects that define the added area object. The point object names should be ordered to run clockwise or counter clockwise around the area object.</p>
<p class="ParameterName">Name</p>
<p class="Comment">This is the name that the program ultimately assigns for the area object. If no UserName is specified, the program assigns a default name to the area object. If a UserName is specified and that name is not used for another area object, the UserName is assigned to the area object; otherwise a default name is assigned to the area object.</p>
<p class="ParameterName">PropName</p>
<p class="Comment">This is Default, None or the name of a defined area property.</p>
<p class="Comment">If it is Default, the program assigns a default area property to the area object. If it is None, no area property is assigned to the area object. If it is the name of a defined area property, that property is assigned to the area object.</p>
<p class="ParameterName">UserName</p>
<p class="Comment">This is an optional user specified name for the area object. If a UserName is specified and that name is already used for another area object, the program ignores the UserName.</p>
<h2>Remarks</h2>
<p class="Comment">This function adds a new area object whose defining points are specified by name.</p>
<p class="Comment">The function returns zero if the area object is successfully added; otherwise it returns a nonzero value.</p>
<h2>VBA Example</h2>
<p class="Coding">Sub AddAreaObjByPoint()<br>
&#160;&#160;&#160;'dimension variables<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim SapObject as cOAPI<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim SapModel As cSapModel<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim ret As Long<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim Point() As String<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim Name As String<br>
<br>
&#160;&#160;&#160;'create Sap2000 object<br>
&#160;&#160;&#160;&#160;&#160;&#160;Set SapObject = CreateObject("CSI.SAP2000.API.SapObject")<br>
<br>
&#160;&#160;&#160;'start Sap2000 application<br>
&#160;&#160;&#160;&#160;&#160;&#160;SapObject.ApplicationStart<br>
<br>
&#160;&#160;&#160;'create SapModel object<br>
&#160;&#160;&#160;&#160;&#160;&#160;Set SapModel = SapObject.SapModel<br>
<br>
&#160;&#160;&#160;'initialize model<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.InitializeNewModel<br>
<br>
&#160;&#160;&#160;'create model from template<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.File.New2DFrame(PortalFrame, 2, 144, 2, 288)<br>
<br>
&#160;&#160;&#160;'add area object by points<br>
&#160;&#160;&#160;&#160;&#160;&#160;Redim Point(3)<br>
&#160;&#160;&#160;&#160;&#160;&#160;Point(0) = "1"<br>
&#160;&#160;&#160;&#160;&#160;&#160;Point(1) = "4"<br>
&#160;&#160;&#160;&#160;&#160;&#160;Point(2) = "5"<br>
&#160;&#160;&#160;&#160;&#160;&#160;Point(3) = "2"<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.AreaObj.AddByPoint(4, Point, Name)<br>
<br>
&#160;&#160;&#160;'refresh view<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.View.RefreshView(0, False)<br>
<br>
&#160;&#160;&#160;'close Sap2000<br>
&#160;&#160;&#160;&#160;&#160;&#160;SapObject.ApplicationExit False<br>
&#160;&#160;&#160;&#160;&#160;&#160;Set SapModel = Nothing<br>
&#160;&#160;&#160;&#160;&#160;&#160;Set SapObject = Nothing<br>
End Sub</p>
<h2>Release Notes</h2>
<p class="Comment">Initial release in version 11.00.</p>
<h2>See Also</h2>
<p class="Block-Text"><a href="AddByCoord_{Area_Object}.htm">AddByCoord</a></p>
</body>
</html>
