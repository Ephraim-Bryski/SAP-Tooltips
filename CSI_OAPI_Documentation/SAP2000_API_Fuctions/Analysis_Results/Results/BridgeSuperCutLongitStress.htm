
<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="Originator" content="ImportDoc">
<meta name="OriginalFile" content="BridgeSuperCutLongitStress.doc">
 <meta name="generator" content="Adobe RoboHelp 2019">
<title>BridgeSuperCutLongitStress</title>
<link rel="StyleSheet" href="../../../SAP2000.CSS" type="text/css">
</head>
<body lang="EN-US" xml:lang="EN-US"><a name="642b3b9347ca42c9b00b820c00c373fa=1"></a>
<script type="text/javascript" src="../../../ehlpdhtm.js"></script>

<h1>BridgeSuperCutLongitStress</h1>
<h2>Syntax</h2>
<p class="Comment">SapObject.SapModel.Results.BridgeSuperCutLongitStress</p>
<h2>VB6 Procedure</h2>
<p class="Comment">Function BridgeSuperCutLongitStress(ByVal Name As String, ByVal CutIndex As Long, ByVal PointIndex As Long, ByRef NumberResults As Long, ByRef LoadCase() As String, ByRef StepType() As String, ByRef StepNum() As Double, ByRef Stress() As Double) As Long</p>
<h2>Parameters</h2>
<p class="ParameterName">Name</p>
<p class="Comment">The name of an existing bridge object.</p>
<p class="ParameterName">CutIndex</p>
<p class="Comment">The index number of section cut in this bridge object. This must be from 0 to Count-1, where Count is the value returned by function SapModel.BridgeObj.CountSuperCut.</p>
<p class="ParameterName">PointIndex</p>
<p class="Comment">The index number of the stress point in this section cut in this bridge object. This must be from 0 to Count-1, where Count is the value returned by function SapModel.BridgeObj.CountSuperCutStressPoint.</p>
<p class="ParameterName">NumberResults</p>
<p class="Comment">The total number of results returned.</p>
<p class="ParameterName">LoadCase</p>
<p class="Comment">This is an array that includes the name of the load case or load combination associated with each result.</p>
<p class="ParameterName">StepType</p>
<p class="Comment">This is an array that includes the step type, if any, for each result.</p>
<p class="ParameterName">StepNum</p>
<p class="Comment">This is an array that includes the step number, if any, for each result.</p>
<p class="ParameterName">Stress</p>
<p class="Comment">This is an array that includes the longitudinal stress value for each result. [F/L<sup>2</sup>]</p>
<h2>Remarks</h2>
<p class="Comment">This function returns the longitudinal stresses for multiple cases/combos at a single stress point in a superstructure section cut in a bridge object. Use the functions in SapModel.Results.Setup to control the loads and steps for which results are to be obtained.</p>
<p class="Comment">The function returns zero if the information is successfully retrieved, otherwise it returns a nonzero value.</p>
<h2>VBA Example</h2>
<p class="Comment">This example assumes that a file MyBridge.sdb exists and has a linked bridge object named BOBJ1 in it. It also assumes a load case named DEAD exists in the model.</p>
<p class="Coding">Sub GetBridgeSuperCutLongitStress()<br>
&#160;&#160;&#160;'dimension variables<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim SapObject as cOAPI<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim SapModel As cSapModel<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim ret As Long<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim NumberResults As Long<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim StepType() As String<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim StepNum() As Double<br>
&#160;&#160;&#160;&#160;&#160;&#160;Dim Stress() As Double<br>
<br>
&#160;&#160;&#160;'create Sap2000 object<br>
&#160;&#160;&#160;&#160;&#160;&#160;Set SapObject = CreateObject("CSI.SAP2000.API.SapObject")<br>
<br>
&#160;&#160;&#160;'start Sap2000 application<br>
&#160;&#160;&#160;&#160;&#160;&#160;SapObject.ApplicationStart<br>
<br>
&#160;&#160;&#160;'create SapModel object<br>
&#160;&#160;&#160;&#160;&#160;&#160;Set SapModel = SapObject.SapModel<br>
<br>
&#160;&#160;&#160;'initialize model<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.InitializeNewModel<br>
<br>
&#160;&#160;&#160;'open an existing file<br>
&#160;&#160;&#160;&#160;&#160;&#160;FileName = "C:\SapAPI\MyBridge.sdb"<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.File.OpenFile(FileName)<br>
<br>
&#160;&#160;&#160;'run analysis<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.Analyze.RunAnalysis<br>
<br>
&#160;&#160;&#160;'clear all case and combo output selections<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.Results.Setup.DeselectAllCasesAndCombosForOutput<br>
<br>
&#160;&#160;&#160;'set case and combo output selections<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.Results.Setup.SetCaseSelectedForOutput("DEAD")<br>
<br>
&#160;&#160;&#160;'get bridge section cut results<br>
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.Results.BridgeSuperCutLongitStress("BOBJ1", 1, 1, NumberResults, LoadCase, StepType, StepNum, Stress)<br>
<br>
&#160;&#160;&#160;'close Sap2000<br>
&#160;&#160;&#160;&#160;&#160;&#160;SapObject.ApplicationExit False<br>
&#160;&#160;&#160;&#160;&#160;&#160;Set SapModel = Nothing<br>
&#160;&#160;&#160;&#160;&#160;&#160;Set SapObject = Nothing<br>
End Sub</p>
<h2>Release Notes</h2>
<p class="Comment">Initial release in version 12.00.</p>
<h2>See Also</h2>
</body>
</html>
