<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="Originator" content="ImportDoc" />
<meta name="OriginalFile" content="F:\Documents and Settings\Nancy\My Documents\SharedFiles\API\Area Element Functions\GetLoadStrain.doc" />
<meta name="topic-status" content="In Progress" />
<meta name="topic-priority" content="0" />
<meta name="topic-time-estimate" content="0" />
<meta name="topic-id" content="" />
<meta name="generator" content="Adobe RoboHelp 10" />
<title>GetLoadStrain {Area Element}</title>
<link rel="stylesheet" href="../../../SAP2000.CSS" type="text/css" />
</head>
<body lang="EN-US" xml:lang="EN-US">
<script type="text/javascript" src="../../../ehlpdhtm.js"></script>

<h1>GetLoadStrain</h1>
<h2>Syntax</h2>
<p class="Comment">SapObject.SapModel.AreaElm.GetLoadStrain</p>
<h2>VB6 Procedure</h2>
<p class="Comment">Function GetLoadStrain(ByVal Name As String, ByRef NumberItems As Long, ByRef AreaName() As String, ByRef LoadPat() As String, ByRef Component() As Long, ByRef Value() As Double, ByRef PatternName() As String, Optional ByVal ItemTypeElm As eItemTypeElm = Element) As Long</p>
<h2>Parameters</h2>
<p class="ParameterName">Name</p>
<p class="Comment">The name of an existing area element or group, depending on the value of the ItemType item.</p>
<p class="ParameterName">NumberItems</p>
<p class="Comment">The total number of strain loads retrieved for the specified area elements.</p>
<p class="ParameterName">AreaName</p>
<p class="Comment">This is an array that includes the name of the area element associated with each strain load.</p>
<p class="ParameterName">LoadPat</p>
<p class="Comment">This is an array that includes the name of the load pattern associated with each strain load.</p>
<p class="ParameterName">Component</p>
<p class="Comment">This is an array that includes 1, 2, 3, 4, 5, 6, 7 or 8, indicating the component associated with each strain load.</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: 88px;">1 = Strain11</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: 88px;">2 = Strain22</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: 88px;">3 = Strain12</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: 88px;">4 = Curvature11</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: 88px;">5 = Curvature22</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: 88px;">6 = Curvature12</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: 88px;">7 = Strain13</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-left: 88px; margin-bottom: 9pt;">8 = Strain23</p>
<p class="ParameterName">Value</p>
<p class="Comment">This is an array that includes the strain value. [L/L] for Component = 1, 2, 3, 7 and 8, and [1/L] for Component = 4, 5 and 6</p>
<p class="ParameterName">PatternName</p>
<p class="Comment">This is an array that includes the joint pattern name, if any, used to specify the strain load.</p>
<p class="ParameterName">ItemTypeElm</p>
<p class="Comment">This is one of the following items in the eItemTypeElm enumeration:</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: 88px;">ObjectElm = 0</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: 88px;">Element = 1</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: 88px;">GroupElm = 2</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: 88px;">SelectionElm = 3</p>
<p class="ParameterDescription" style="margin-top: 0in; margin-right: 0in; margin-bottom: .0001pt; margin-left: .5in;">&#160;</p>
<p class="Comment">If this item is ObjectElm, the load assignments are retrieved for the area elements corresponding to the area object specified by the Name item.</p>
<p class="Comment">If this item is Element, the load assignments are retrieved for the area element specified by the Name item.</p>
<p class="Comment">If this item is GroupElm, the load assignments are retrieved for the area elements corresponding to all area objects included in the group specified by the Name item.</p>
<p class="Comment">If this item is SelectionElm, the load assignments are retrieved for area elements corresponding to all selected area objects, and the Name item is ignored.</p>
<h2>Remarks</h2>
<p class="Comment">This function retrieves the strain load assignments to area elements.</p>
<p class="Comment">The function returns zero if the strain load assignments are successfully retrieved; otherwise it returns a nonzero value.</p>
<h2>VBA Example</h2>
<p class="Coding">Sub GetAreaElementStrainLoad()<br />
&#160;&#160;&#160;'dimension variables<br />
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Dim SapObject as cOAPI<br />
&#160;&#160;&#160;&#160;&#160;&#160;Dim SapModel As cSapModel<br />
&#160;&#160;&#160;&#160;&#160;&#160;Dim ret As Long<br />
&#160;&#160;&#160;&#160;&#160;&#160;Dim NumberItems As Long<br />
&#160;&#160;&#160;&#160;&#160;&#160;Dim AreaName() As String<br />
&#160;&#160;&#160;&#160;&#160;&#160;Dim LoadPat() As String<br />
&#160;&#160;&#160;&#160;&#160;&#160;Dim Component() As Long<br />
&#160;&#160;&#160;&#160;&#160;&#160;Dim Value() As Double<br />
&#160;&#160;&#160;&#160;&#160;&#160;Dim PatternName() As String<br />
<br />
&#160;&#160;&#160;'create Sap2000 object<br />
&#160;&#160;&#160;&#160;&#160;&#160;Set SapObject = CreateObject("CSI.SAP2000.API.SapObject")<br />
<br />
&#160;&#160;&#160;'start Sap2000 application<br />
&#160;&#160;&#160;&#160;&#160;&#160;SapObject.ApplicationStart<br />
<br />
&#160;&#160;&#160;'create SapModel object<br />
&#160;&#160;&#160;&#160;&#160;&#160;Set SapModel = SapObject.SapModel<br />
<br />
&#160;&#160;&#160;'initialize model<br />
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.InitializeNewModel<br />
<br />
&#160;&#160;&#160;'create model from template<br />
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.File.NewWall(2, 48, 2, 48)<br />
<br />
&#160;&#160;&#160;'assign area object strain load<br />
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.AreaObj.SetLoadStrain("ALL", "DEAD", 1, 0.001, , , Group)<br />
<br />
&#160;&#160;&#160;'create analysis model<br />
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.Analyze.CreateAnalysisModel<br />
<br />
&#160;&#160;&#160;'get area element strain load<br />
&#160;&#160;&#160;&#160;&#160;&#160;ret = SapModel.AreaElm.GetLoadStrain("3", NumberItems, AreaName, LoadPat, Component, Value, PatternName)<br />
<br />
&#160;&#160;&#160;'close Sap2000<br />
&#160;&#160;&#160;&#160;&#160;&#160;SapObject.ApplicationExit False<br />
&#160;&#160;&#160;&#160;&#160;&#160;Set SapModel = Nothing<br />
&#160;&#160;&#160;&#160;&#160;&#160;Set SapObject = Nothing<br />
End Sub</p>
<h2>Release Notes</h2>
<p class="Comment">Initial release in version 11.00.</p>
<p class="Comment">Changed nomenclature from Load Cases, Analysis Cases and Response Combinations to Load Patterns, Load Cases and Load Combinations, respectively, in version 12.00.</p>
<h2>See Also</h2>
</body>
</html>
